// <auto-generated />
using System;
using DailyOperations.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DailyOperations.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230709145948_Adding Members Tables for skills and education")]
    partial class AddingMembersTablesforskillsandeducation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.AssistantsMilitaryDegree", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssistantMilitaryDegrees");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.EducationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EducationTypes");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.OfficerMilitaryDegree", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OfficerMilitaryDegrees");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Degree = "ملازم",
                            DisplayOrder = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2L,
                            Degree = "ملازم أول",
                            DisplayOrder = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3L,
                            Degree = "نقيب",
                            DisplayOrder = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4L,
                            Degree = "رائد",
                            DisplayOrder = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5L,
                            Degree = "مقدم",
                            DisplayOrder = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6L,
                            Degree = "عقيد",
                            DisplayOrder = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 7L,
                            Degree = "عميد",
                            DisplayOrder = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 8L,
                            Degree = "لواء",
                            DisplayOrder = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 9L,
                            Degree = "مساعد وزير",
                            DisplayOrder = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 10L,
                            Degree = "مساعد أول وزير",
                            DisplayOrder = 8,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.PoliceAssistant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AssistantsMilitaryDegreeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<long>("PowerTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssistantsMilitaryDegreeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PowerTypeId");

                    b.ToTable("PoliceAssistants");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.PoliceOfficer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("OfficerMilitaryDegreeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<long>("PowerTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("OfficerMilitaryDegreeId");

                    b.HasIndex("PowerTypeId");

                    b.ToTable("PoliceOfficers");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.PowerType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PowerTypes");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.SoldierSkill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SoldierId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SoldierId");

                    b.ToTable("SoldierSkills");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleLetters")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<long>("VehicleMarkId")
                        .HasColumnType("bigint");

                    b.Property<string>("VehicleNumbers")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<long>("VehicleTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VehicleMarkId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.VehicleMark", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VehicleMarks");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.VehicleType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Soldier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("EducationTypeId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ExtraDuration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<long>("PowerTypeId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RecruitmentDuration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RecruitmentEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RecruitmentStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EducationTypeId");

                    b.HasIndex("PowerTypeId");

                    b.ToTable("Soldiers");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.PoliceAssistant", b =>
                {
                    b.HasOne("DailyOperations.Domain.Entities.Members.AssistantsMilitaryDegree", "AssistantsMilitaryDegree")
                        .WithMany()
                        .HasForeignKey("AssistantsMilitaryDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DailyOperations.Domain.Entities.Members.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DailyOperations.Domain.Entities.Members.PowerType", "PowerType")
                        .WithMany()
                        .HasForeignKey("PowerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssistantsMilitaryDegree");

                    b.Navigation("Department");

                    b.Navigation("PowerType");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.PoliceOfficer", b =>
                {
                    b.HasOne("DailyOperations.Domain.Entities.Members.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DailyOperations.Domain.Entities.Members.OfficerMilitaryDegree", "OfficerMilitaryDegree")
                        .WithMany()
                        .HasForeignKey("OfficerMilitaryDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DailyOperations.Domain.Entities.Members.PowerType", "PowerType")
                        .WithMany()
                        .HasForeignKey("PowerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("OfficerMilitaryDegree");

                    b.Navigation("PowerType");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.SoldierSkill", b =>
                {
                    b.HasOne("DailyOperations.Domain.Entities.Soldier", "Soldier")
                        .WithMany()
                        .HasForeignKey("SoldierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Soldier");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Members.Vehicle", b =>
                {
                    b.HasOne("DailyOperations.Domain.Entities.Members.VehicleMark", "VehicleMark")
                        .WithMany()
                        .HasForeignKey("VehicleMarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DailyOperations.Domain.Entities.Members.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleMark");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("DailyOperations.Domain.Entities.Soldier", b =>
                {
                    b.HasOne("DailyOperations.Domain.Entities.Members.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DailyOperations.Domain.Entities.Members.EducationType", "EducationType")
                        .WithMany()
                        .HasForeignKey("EducationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DailyOperations.Domain.Entities.Members.PowerType", "PowerType")
                        .WithMany()
                        .HasForeignKey("PowerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("EducationType");

                    b.Navigation("PowerType");
                });
#pragma warning restore 612, 618
        }
    }
}
